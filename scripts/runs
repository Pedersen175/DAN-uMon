################################################################################
# File name: runs (run script)
# Run another uMON script from TFTP or apps.jffs2 partition
# Usage:
#	runs [<ARG1>] <ARG2> [<ARG3>]
# ARG1:
#	- tftp (default) - get files from the TFTP server
#  	- flash 		 - get files from the JFFS2 file systems
# ARG2:
#   - script file name to run
# ARG3:
#   - optional script's argument
################################################################################

# Validate arguments: if ARG2 is absent, ARG1 is a file name
if $ARG2 sne \$ARG2  goto def_arg_end
set ARG2 $ARG1
set ARG1 tftp
# def_arg_end:

# Save ARG1 & ARG2 values in ARG1_ & ARG2_ (it may be cleared after calling other batch files)
set ARG1_ $ARG1
set ARG2_ $ARG2
set ARG3_ $ARG3

# Reset UMON_TMP_DOWNLOAD address to its default
set UMON_TMP_DOWNLOAD	$UMON_TMP_DOWNLOAD_DEF

# Allocate additional heap needed for unzipping
-heap -X $UMON_TMP_HEAP,$UMON_TMP_HEAP_SIZE

if $ARG1_ seq flash  goto arg1_flash
# arg1_tftp:   by default
set GET_CMD		GetFileTftp
goto arg1_end
# arg1_flash:
set GET_CMD		GetFileJffs2
jffs apps
# arg1_end:

set GetFile_NAME $ARG2_
gosub $GET_CMD
if $GetFile_RESULT eq 0 goto FILE_ERR
gosub RunRamScript
goto FILE_END
# FILE_ERR:
echo Error getting file '$ARG2_'
# FILE_END:

heap -x
exit


########################################################
# GetFileTftp:
# Get file from TFTP
# Parameters:	
# 	$GetFile_NAME	- file name to get
# Return:
# 	$GetFile_RESULT	- 0/<FileSize> when error/ok

tftp $TFTP_SERVER_ADDR get $GetFile_NAME $UMON_TMP_DOWNLOAD
if $TFTPGET seq \$TFTPGET goto tftp_err
set GetFile_RESULT $TFTPGET
return
# tftp_err:
set GetFile_RESULT 0
return



########################################################
# GetFileJffs2:
# Get file from JFFS2
# Parameters:	
# 	$GetFile_NAME	- file name to get
# Return:
# 	$GetFile_RESULT	- 0/<FileSize> when error/ok

echo Loading file $GetFile_NAME...\t\c
jffs2 qry $GetFile_NAME
if $JFFS2FTOT eq 1 goto jffs_continue
set GetFile_RESULT 0
echo Not found
return
# jffs_continue:
jffs2 get $GetFile_NAME $UMON_TMP_DOWNLOAD
set GetFile_RESULT $JFFS2FSIZE
# echo Ok - do not print 'Ok', the file size in bytes is printed by uMON
return



########################################################
# RunRamScript:
# run script $GetFile_NAME,$GetFile_RESULT(size)from $UMON_TMP_DOWNLOAD

echo Running '$GetFile_NAME'
set RAM_ADDR $UMON_TMP_DOWNLOAD
set -i -x RAM_ADDR 0x20000	# the RAM drive size & max file size is 128Kb
tfs ramdev tmp $RAM_ADDR 0x20000
tfs -fe add //tmp/$GetFile_NAME $UMON_TMP_DOWNLOAD $GetFile_RESULT
//tmp/$GetFile_NAME $ARG3_
tfs rm //tmp/$GetFile_NAME
tfs ramdev tmp $UMON_TMP_DOWNLOAD 0
return
 
