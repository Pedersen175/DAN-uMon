# parse arguements
if $ARG1 seq \$ARG1     goto print_help
if $ARG1 seq ?          goto print_help
if $ARG1 sec A          goto all_cores
if $ARG1 sec B          goto core_bitmap
if $ARG1 sec C          goto clear_counters
if $ARG1 lt 32          goto single_core
goto invalid_arg

# print_help
echo ==================================================================================================================
echo
echo ........................................... DISPLAY DEBUG COUNTERS ...............................................
echo
echo This script displays the debug counters for the different cores
echo
echo Usage :
echo .... pc [?AB core_num] [bitmap | core_num]
echo
echo Where :
echo .... ? - Prints this help, in addition this help will be printed if no paramaters at all are supplied.
echo .... A - Prints counters for all cores (lower case a can also be used).
echo .... B - Prints counters for cores indicated by the accompanying bitmap (e.g. 0x1000000000000010 - cores 31 and 2).
echo .... core_num - Print the counters for the desired core number please note map of cores below.
echo .... C - Clears counters eg pc c clears all counters pc c 9 clears all counters for NPU_CPU1.
echo
echo .... 0 .- NPU_ARM0 | 1. - NPU_ARM1 | 2 .- NPU_ARM2 | 3 .- NPU_ARM3 
echo .... 4 .- RES_4 .. | 5. - RES_5 .. | 6 .- RES_6 .. | 7 .- RES_7 
echo .... 8 .- NPU_CPU0 | 9. - NPU_CPU1 | 10 - NPU_CPU2 | 11 - NPU_CPU3 
echo .... 12 - NPU_CPU4 | 13 - NPU_CPU5 | 14 - RES_14 . | 15 - RES_15
echo .... 16 - TX_CPU_0 | 17 - TX_CPU_1 | 18 - TX_CPU_2 | 19 - TX_CPU_3 
echo .... 20 - TX_DSP_0 | 21 - TX_DSP_1 | 22 - RES_22 . | 23 - RES_23
echo .... 24 - RX_CPU_0 | 25 - RX_CPU_1 | 26 - RES_26 . | 27 - RES_27 
echo .... 28 - RX_DSP_0 | 29 - RX_DSP_1 | 30 - RX_DSP_2 | 31 - RX_DSP_3
echo
echo ==================================================================================================================

goto end_of_script

# single_core
if $ARG1 gt 23 goto print_core_gt23
if $ARG1 gt 15 goto print_core_gt15 
if $ARG1 gt 7 goto  print_core_gt7 
    item $ARG1 core 0x1          0x2         0x4         0x8         0x10        0x20        0x40        0x80
    goto display_single_core_counters
    
# print_core_gt7
    set ARG1=$ARG1-7
    item $ARG1 core 0x100        0x200       0x400       0x800       0x1000      0x2000      0x4000      0x8000  
    goto display_single_core_counters

# print_core_gt15
    set ARG1=$ARG1-15
    item $ARG1 core 0x10000     0x20000     0x40000     0x80000     0x100000    0x200000    0x400000    0x800000 
    goto display_single_core_counters
   
# print_core_gt23
    set ARG1=$ARG1-23
    item $ARG1 core 0x1000000   0x2000000   0x4000000   0x8000000   0x10000000  0x20000000  0x40000000  0x80000000 


# display_single_core_counters
    if $core seq /$core goto invalid_arg
    echo
    echo
    echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ COUNTERS START ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    echo
    echo
    pm -4 0x83800000 $core
#    echo single core $core
    goto end_of_script


# all_cores
    echo
    echo
    echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ COUNTERS START ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    echo
    echo
    pm -4 0x83800000 0xffffffff
#    echo all cores
    goto end_of_script

# core_bitmap
    if  $ARG2 seq \$ARG2 goto invalid_arg
    pm -4 0x83800000 $ARG2
#    echo core bitmap $ARG2
    goto end_of_script
    
# clear_counters
    if  $ARG2 seq \$ARG2 goto clear_all_counters
    
    if $ARG2 gt 23 goto clear_core_gt23
    if $ARG2 gt 15 goto clear_core_gt15 
    if $ARG2 gt 7 goto  clear_core_gt7 
        item $ARG2 core 0x1          0x2         0x4         0x8         0x10        0x20        0x40        0x80
        goto clear_single_core_counters
        
# clear_core_gt7
    set ARG2=$ARG2-7
    item $ARG2 core 0x100        0x200       0x400       0x800       0x1000      0x2000      0x4000      0x8000  
    goto clear_single_core_counters

# clear_core_gt15
    set ARG2=$ARG2-15
    item $ARG2 core 0x10000     0x20000     0x40000     0x80000     0x100000    0x200000    0x400000    0x800000 
    goto clear_single_core_counters

# clear_core_gt23
    set ARG2=$ARG2-23
    item $ARG2 core 0x1000000   0x2000000   0x4000000   0x8000000   0x10000000  0x20000000  0x40000000  0x80000000 
    
# clear_single_core_counters
    pm -4 0x83800004 $core
    goto end_of_script
    
# clear_all_counters
    pm -4 0x83800004 0xffffffff
    goto end_of_script

# invalid_arg
    echo 1st arg is invalid: Please enter pc ? for usage

# end_of_script
exit
